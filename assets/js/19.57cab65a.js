(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{378:function(a,t,s){"use strict";s.r(t);var e=s(46),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"静态类型检测器-flow-入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态类型检测器-flow-入门"}},[a._v("#")]),a._v(" 静态类型检测器 Flow 入门")]),a._v(" "),s("blockquote",[s("p",[s("code",[a._v("2018-05-12")]),a._v(" by "),s("code",[a._v("Saul Shen")])])]),a._v(" "),s("h2",{attrs:{id:"flow-入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flow-入门"}},[a._v("#")]),a._v(" Flow 入门")]),a._v(" "),s("h3",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[a._v("#")]),a._v(" 介绍")]),a._v(" "),s("p",[a._v("一个 JAVASCRIPT 静态类型检测器")]),a._v(" "),s("ul",[s("li",[a._v("Flow 使用类型接口查找错误，甚至不需要任何类型声明。 它也能够准确地跟踪变量的类型，就像运行时那样")]),a._v(" "),s("li",[a._v("Flow 专为 JavaScript 程序员设计。 他能够理解常用 JS 方言和极具动态的特性")]),a._v(" "),s("li",[a._v("Flow 能立刻检测代码变化，在开发 JS 时提供快速不断地反馈")])]),a._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("ol",[s("li",[a._v("在项目中安装 flow "),s("code",[a._v("npm i -D flow-bin")])]),a._v(" "),s("li",[a._v("在项目中安装 babel 插件 "),s("code",[a._v("npm i -D babel-plugin-transform-flow-strip-types")])]),a._v(" "),s("li",[a._v("在编辑器中安装 flow 插件，各个商店应该会有各自对应的插件")]),a._v(" "),s("li",[a._v("全局安装 flow-type"),s("code",[a._v("npm i -g flow-typed")]),a._v("，flow-typed 是什么见下面 👇")])]),a._v(" "),s("h3",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[a._v("#")]),a._v(" 使用")]),a._v(" "),s("h4",{attrs:{id:"在-babelrc添加插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-babelrc添加插件"}},[a._v("#")]),a._v(" 在"),s("code",[a._v(".babelrc")]),a._v("添加插件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('{\n  "presets": [\n    "next/babel"\n  ],\n  "plugins": [\n    "transform-decorators-legacy",\n    "transform-flow-strip-types"\n  ]\n}\n')])])]),s("h4",{attrs:{id:"在根目录中添加-flowconfig文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在根目录中添加-flowconfig文件"}},[a._v("#")]),a._v(" 在根目录中添加"),s("code",[a._v(".flowconfig")]),a._v("文件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[ignore]\n<PROJECT_ROOT>/node_modules/.*\n<PROJECT_ROOT>/coverage/.*\n<PROJECT_ROOT>/.next/.*\n\n[options]\nmodule.file_ext=.js\nmodule.file_ext=.jsx\nmodule.file_ext=.json\nmodule.file_ext=.css\nmodule.file_ext=.scss\nmodule.file_ext=.less\nmodule.name_mapper.extension='css' -> 'empty/object'\nmodule.name_mapper.extension='scss' -> 'empty/object'\nmodule.name_mapper.extension='less' -> 'empty/object'\n\nesproposal.decorators=ignore\n\nmodule.name_mapper='^@src\\/\\(.*\\)$' -> '<PROJECT_ROOT>/\\1'\n")])])]),s("p",[a._v("这是我项目中的配置文件，主要做了几件事")]),a._v(" "),s("ol",[s("li",[a._v("忽略一些不需要检查的文件夹")]),a._v(" "),s("li",[a._v("指定需要检查文件的后缀名")]),a._v(" "),s("li",[a._v("将样式文件解析成空 \b 对象")]),a._v(" "),s("li",[a._v("\b 运行使用 decorator 语法")]),a._v(" "),s("li",[a._v("指定模块解析方式，因为我的模块路径都是@src 开头的")])]),a._v(" "),s("h4",{attrs:{id:"在根目录中添加flow-typed文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在根目录中添加flow-typed文件夹"}},[a._v("#")]),a._v(" \b 在根目录中添加"),s("code",[a._v("flow-typed")]),a._v("文件夹")]),a._v(" "),s("p",[a._v("这个文件夹是用来存放第三方或者你自己编写的定义文件的地方，在 flow 运行的时候会去读文件夹里所有文件的定义，当然你也可以通过配置文件修改默认文件夹的名字。\n比如新建一个"),s("code",[a._v("flow-typed/global.js")]),a._v("文件,来定义一些全局变量")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("declare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" document"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Object\n\ndeclare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" window"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Object\n")])])]),s("h4",{attrs:{id:"使用-flow-检查文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-flow-检查文件"}},[a._v("#")]),a._v(" 使用 flow 检查文件")]),a._v(" "),s("p",[a._v("新建一个文件"),s("code",[a._v("src/index.js")])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// @flow")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" string "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" b\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Works!")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// $ExpectError")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Error!")]),a._v("\n")])])]),s("p",[a._v("通过在文件头部添加"),s("code",[a._v("// @flow")]),a._v("来告诉 flow 这是个需要检查的文件，可以看到 flow 是个很自由的 \b 工具，尤其是对已经开发很久的项目来说，可以一点点使用 flow，而不必对整个项目进行改造。\n一但对参数指定好类型后，flow 就可以开始正常工作了，如果需要 flow 检查又没有定义类型，flow 也会提示你去定义。\n对于如何去 \b 定义各种不同的变量、函数，这些在文档中会有更加详细的介绍，这里就不细展开了。")]),a._v(" "),s("h4",{attrs:{id:"类型的模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型的模块化"}},[a._v("#")]),a._v(" 类型的模块化")]),a._v(" "),s("p",[a._v("怎么去暴露已经定义好的类型给其他文件使用呢？")]),a._v(" "),s("ol",[s("li",[a._v("新建一个暴露 js 模块，类型混合的文件"),s("code",[a._v("a.js")])])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" type "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" number\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("新建"),s("code",[a._v("b.js")]),a._v("引用"),s("code",[a._v("a.js")])])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./a.js'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" type "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./a.js'")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("A")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'b'")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" b\n")])])]),s("h4",{attrs:{id:"使用第三方库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用第三方库"}},[a._v("#")]),a._v(" 使用第三方库")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// @flow")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'lodash'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Error")]),a._v("\n")])])]),s("p",[a._v("flow 会报找不到该模块，这个时候需要我们去下载 lodash 的定义文件，用 flow-type\b\bd 可以很方便的管理这些第三方库的定义文件")]),a._v(" "),s("h3",{attrs:{id:"flow-typed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flow-typed"}},[a._v("#")]),a._v(" flow-typed")]),a._v(" "),s("p",[a._v("一个查找安装第三方库定义文件的管理工具")]),a._v(" "),s("ol",[s("li",[a._v("查找\n"),s("code",[a._v("flow-typed search lodash")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Found definitions:\n╔════════╤═════════════════╤═════════════════════╗\n║ Name   │ Package Version │ Flow Version        ║\n╟────────┼─────────────────┼─────────────────────╢\n║ lodash │ v4.x.x          │ >=v0.63.x           ║\n╟────────┼─────────────────┼─────────────────────╢\n║ lodash │ v4.x.x          │ >=v0.55.x <=v0.62.x ║\n╟────────┼─────────────────┼─────────────────────╢\n║ lodash │ v4.x.x          │ >=v0.47.x <=v0.54.x ║\n╟────────┼─────────────────┼─────────────────────╢\n║ lodash │ v4.x.x          │ >=v0.38.x <=v0.46.x ║\n╟────────┼─────────────────┼─────────────────────╢\n║ lodash │ v4.x.x          │ >=v0.28.x <=v0.37.x ║\n╚════════╧═════════════════╧═════════════════════╝\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[a._v("选一个版本安装"),s("code",[a._v("flow-typed install lodash@v4.x.x")]),a._v("，下载的文件会默认保存在"),s("code",[a._v("flow-typed/npm")]),a._v("文件夹下，并且在 flow 运行的时候自动加载，这个时候就能解决刚刚’模块找不到‘的报错")])]),a._v(" "),s("li",[s("p",[a._v("如果搜索不到对应的 \b 定义文件怎么办？我们可以自己手动新建。")])])]),a._v(" "),s("ul",[s("li",[a._v("如果我们从 npm 上下了一个"),s("code",[a._v("clipboard")]),a._v("库使用")]),a._v(" "),s("li",[a._v("添加对应的定义，新建文件"),s("code",[a._v("flow-typed/npm/clipboard.js")])])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("declare module "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'clipboard'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  declare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),a._v(" any\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("这里，我很粗暴的把这个模块定义成了 any 类型，当然如果你对模块熟悉或者想定义的更详细的话，也可以把这个模块的各个属性定义补充完整。具体怎么定义 \b，可以查看文档，这里也不展开了。")]),a._v(" "),s("h3",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[a._v("#")]),a._v(" 常见问题")]),a._v(" "),s("ol",[s("li",[a._v("引入 css 文件报错\n我们可以下载一个空模块"),s("code",[a._v("npm i -D empty")]),a._v("，然后在配置文件中，把所有的样式文件指向该模块下的空对象")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[options]\nmodule.name_mapper.extension='css' -> 'empty/object'\nmodule.name_mapper.extension='scss' -> 'empty/object'\nmodule.name_mapper.extension='less' -> 'empty/object'\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("\b 使用 window、document 等全局对象报错\n我们可以在"),s("code",[a._v("flow-typed/xxx.js")]),a._v("中，声明这些全局对象的类型")])]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("declare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" document"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Object\n\ndeclare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" window"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Object\n\ndeclare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" process"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Object\n\ndeclare "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" option"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Promise"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("any"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[a._v("使用 fetch 报错，见上 👆")])]),a._v(" "),s("li",[s("p",[a._v("使用 decorator\b 语法报错\n在配置文件中添加")])])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[options]\nesproposal.decorators=ignore\n")])])]),s("p",[a._v("很不幸的是，即使忽略 decorator\b 语法报错，在我们暴露一些经过修饰器修饰的模块给其他文件使用的时候，也会遇到报错的问题，根本原因是 flow 不支持 decorator\b 语法的类型检查，所以除非这个 \b 模块不会被其他文件使用，可以使用 decorator\b 语法，不然最好的选择就是不用 decorator\b 语法")]),a._v(" "),s("h3",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[a._v("#")]),a._v(" 最后")]),a._v(" "),s("p",[a._v("感谢阅读，有错误希望能及时指正")])])}),[],!1,null,null,null);t.default=r.exports}}]);